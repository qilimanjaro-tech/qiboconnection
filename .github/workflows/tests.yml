name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - "opened"
      - "reopened"
      - "synchronize"
      - "ready_for_review"
  workflow_dispatch:

env:
  HOME_REPO: /home/repo

  PUBLIC_LOGIN_ADMIN_USERNAME: ${{ secrets.PUBLIC_LOGIN_ADMIN_USERNAME }}
  PUBLIC_LOGIN_ADMIN_KEY: ${{ secrets.PUBLIC_LOGIN_ADMIN_KEY }}
  PUBLIC_LOGIN_BSC_USERNAME: ${{ secrets.PUBLIC_LOGIN_BSC_USERNAME }}
  PUBLIC_LOGIN_BSC_KEY: ${{ secrets.PUBLIC_LOGIN_BSC_KEY }}
  PUBLIC_LOGIN_QILI_USERNAME: ${{ secrets.PUBLIC_LOGIN_QILI_USERNAME }}
  PUBLIC_LOGIN_QILI_KEY: ${{ secrets.PUBLIC_LOGIN_QILI_KEY }}
  PUBLIC_LOGIN_MACHINE_USERNAME: ${{ secrets.PUBLIC_LOGIN_MACHINE_USERNAME }}
  PUBLIC_LOGIN_MACHINE_KEY: ${{ secrets.PUBLIC_LOGIN_MACHINE_KEY}}

jobs:
  unit-tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r dev-requirements.txt

      - name: Install library
        run: |
          python -m pip install .

      - name: Test with pytest core
        run: |
          pytest --cov=qiboconnection --cov-report=xml tests/unit/

      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: "unittests"

  e2e-tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    timeout-minutes: 60

    env:
      QUANTUM_SERVICE_URL : "https://dev-api.qaas.qilimanjaro.tech"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r dev-requirements.txt

      - name: Install library
        run: |
          python -m pip install .

      - name: Test with pytest core
        run: |
          pytest tests/end2end/
