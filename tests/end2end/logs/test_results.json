{"report": {"environment": {"Python": "3.11.3", "Platform": "Linux-6.3.0-060300-generic-x86_64-with-glibc2.35"}, "tests": [{"name": "tests/test_sanity_checks.py::test_store_initial_job_and_runcard_count", "duration": 1.0604661680004028, "run_index": 0, "setup": {"name": "setup", "duration": 0.3831249680001747, "outcome": "passed"}, "call": {"name": "call", "duration": 0.29382784300014464, "outcome": "failed", "longrepr": "response = <Response [500]>\n\n    def custom_raise_for_status(response: Response):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(response.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = response.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = response.reason.decode(\"iso-8859-1\")\n        else:\n            reason = response.reason\n    \n        if 400 <= response.status_code < 500:\n            http_error_msg = f\"{response.status_code} Client Error: {reason} for url: {response.url}\"\n    \n        elif 500 <= response.status_code < 600:\n            http_error_msg = f\"{response.status_code} Server Error: {reason} for url: {response.url}\"\n    \n        if http_error_msg and response.text:\n            try:\n                json_text = json.loads(response.text)\n                if \"detail\" in json_text:\n                    json_text[\"detail\"] += f\" {http_error_msg}\"\n                logger.error(json.dumps(json_text, indent=2))\n>               raise HTTPError(json.dumps(json_text, indent=2), response=response)\nE               requests.exceptions.HTTPError: {\nE                 \"title\": \"LookupError\",\nE                 \"status\": 500,\nE                 \"detail\": \"'QUEUED' is not among the defined enum values. Enum name: jobstatus. Possible values: NOT_SENT, PENDING, RUNNING, ..., ERROR 500 Server Error:  for url: https://qilimanjarodev.ddns.net:8080/api/v1/jobs?favourites=False\"\nE               }\n\n../../src/qiboconnection/errors.py:73: HTTPError\n\nThe above exception was the direct cause of the following exception:\n\napi = <qiboconnection.api.API object at 0x7f2ea7393dd0>\nrequest = <FixtureRequest for <Function test_store_initial_job_and_runcard_count>>\n\n    @pytest.mark.order(0)\n    def test_store_initial_job_and_runcard_count(api: API, request):\n        \"\"\"Count number jobs and runcards before running the test suite\"\"\"\n>       initial_job_count = len(api.list_jobs().dataframe)\n\ntests/test_sanity_checks.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/home/adria/miniconda3/envs/qiboconnection/lib/python3.11/site-packages/typeguard/__init__.py:1033: in wrapper\n    retval = func(*args, **kwargs)\n../../src/qiboconnection/api.py:757: in list_jobs\n    jobs_list_response = self._get_list_jobs_response(favourites=favourites)\n../../src/qiboconnection/api.py:721: in _get_list_jobs_response\n    self._connection.send_get_auth_remote_api_call_all_pages(\n../../src/qiboconnection/connection.py:57: in decorated\n    raise ex\n../../src/qiboconnection/connection.py:54: in decorated\n    return func(self, *args, **kwargs)\n/home/adria/miniconda3/envs/qiboconnection/lib/python3.11/site-packages/typeguard/__init__.py:1033: in wrapper\n    retval = func(*args, **kwargs)\n../../src/qiboconnection/connection.py:397: in send_get_auth_remote_api_call_all_pages\n    json_content, status_code = process_response(response)\n../../src/qiboconnection/util.py:109: in process_response\n    custom_raise_for_status(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    def custom_raise_for_status(response: Response):\n        \"\"\"Raises :class:`HTTPError`, if one occurred.\"\"\"\n    \n        http_error_msg = \"\"\n        if isinstance(response.reason, bytes):\n            # We attempt to decode utf-8 first because some servers\n            # choose to localize their reason strings. If the string\n            # isn't utf-8, we fall back to iso-8859-1 for all other\n            # encodings. (See PR #3538)\n            try:\n                reason = response.reason.decode(\"utf-8\")\n            except UnicodeDecodeError:\n                reason = response.reason.decode(\"iso-8859-1\")\n        else:\n            reason = response.reason\n    \n        if 400 <= response.status_code < 500:\n            http_error_msg = f\"{response.status_code} Client Error: {reason} for url: {response.url}\"\n    \n        elif 500 <= response.status_code < 600:\n            http_error_msg = f\"{response.status_code} Server Error: {reason} for url: {response.url}\"\n    \n        if http_error_msg and response.text:\n            try:\n                json_text = json.loads(response.text)\n                if \"detail\" in json_text:\n                    json_text[\"detail\"] += f\" {http_error_msg}\"\n                logger.error(json.dumps(json_text, indent=2))\n                raise HTTPError(json.dumps(json_text, indent=2), response=response)\n            except Exception as ex:\n                json_text_str = str(response.text)\n                logger.error(json_text_str)\n>               raise HTTPError(json_text_str, response=response) from ex\nE               requests.exceptions.HTTPError: {\"title\":\"LookupError\",\"status\":500,\"detail\":\"'QUEUED' is not among the defined enum values. Enum name: jobstatus. Possible values: NOT_SENT, PENDING, RUNNING, ..., ERROR\"}\n\n../../src/qiboconnection/errors.py:77: HTTPError", "log": "ERROR    qiboconnection.config:errors.py:72 {\n  \"title\": \"LookupError\",\n  \"status\": 500,\n  \"detail\": \"'QUEUED' is not among the defined enum values. Enum name: jobstatus. Possible values: NOT_SENT, PENDING, RUNNING, ..., ERROR 500 Server Error:  for url: https://qilimanjarodev.ddns.net:8080/api/v1/jobs?favourites=False\"\n}\nERROR    qiboconnection.config:errors.py:76 {\"title\":\"LookupError\",\"status\":500,\"detail\":\"'QUEUED' is not among the defined enum values. Enum name: jobstatus. Possible values: NOT_SENT, PENDING, RUNNING, ..., ERROR\"}"}, "teardown": {"name": "teardown", "duration": 0.00038838899990878417, "outcome": "passed"}, "outcome": "failed"}, {"name": "tests/test_circuits.py::test_one_qubit_500_gates_circuit[device0]", "duration": 0.795822861999568, "run_index": 1, "setup": {"name": "setup", "duration": 0.39738261599995894, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0005730459997721482, "outcome": "skipped", "longrepr": "('/home/adria/Projects/qiboconnection/tests/end2end/utils/operations.py', 141, 'Skipped: Operation Operation.RESPONSE is not possible in offline in the environment development.')"}, "teardown": {"name": "teardown", "duration": 0.0004845839998779411, "outcome": "passed"}, "outcome": "skipped"}, {"name": "tests/test_circuits.py::test_one_qubit_500_gates_circuit[device1]", "duration": 0.8661280970004555, "run_index": 2, "setup": {"name": "setup", "duration": 0.4325130900001568, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0006000660000609059, "outcome": "skipped", "longrepr": "('/home/adria/Projects/qiboconnection/tests/end2end/utils/operations.py', 141, 'Skipped: Operation Operation.RESPONSE is not possible in dev_sim in the environment development.')"}, "teardown": {"name": "teardown", "duration": 0.0005018510000809329, "outcome": "passed"}, "outcome": "skipped"}, {"name": "tests/test_circuits.py::test_one_qubit_500_gates_circuit[device2]", "duration": 0.8488815669998075, "run_index": 3, "setup": {"name": "setup", "duration": 0.4237547130001076, "outcome": "passed"}, "call": {"name": "call", "duration": 0.0006989069997871411, "outcome": "skipped", "longrepr": "('/home/adria/Projects/qiboconnection/tests/end2end/utils/operations.py', 141, 'Skipped: Operation Operation.RESPONSE is not possible in dev_quant in the environment development.')"}, "teardown": {"name": "teardown", "duration": 0.0006732339998052339, "outcome": "passed"}, "outcome": "skipped"}, {"name": "tests/test_circuits.py::test_two_qubit_500_gates_circuit[device0]", "duration": 0.8245047539999177, "run_index": 4, "setup": {"name": "setup", "duration": 0.41172976500001823, "outcome": "passed"}, "call": {"name": "call", "duration": 0.000554585999907431, "outcome": "skipped", "longrepr": "('/home/adria/Projects/qiboconnection/tests/end2end/utils/operations.py', 141, 'Skipped: Operation Operation.RESPONSE is not possible in offline in the environment development.')"}, "teardown": {"name": "teardown", "duration": 0.0004906379999738419, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"failed": 1, "skipped": 4, "num_tests": 5, "duration": 43.65980577468872}, "created_at": "2024-01-09 10:15:04.493330"}}
