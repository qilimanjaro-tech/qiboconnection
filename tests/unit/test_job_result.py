""" Tests methods for job result """

from qiboconnection.models.job_result import JobResult
from qiboconnection.typings.enums import JobType


def test_job_result_creation():
    """Test job result creation"""
    job_result = JobResult(
        job_id=1,
        http_response='{"data": "H4sIABrWEWcC/4uuViooyk9KTMrMySzJTC1WslKoVjIAkgZ6JjoKSoZgllktkJmcX5pXgpCHyYLlihNzC3LAmqOjDWJ1FKIN4QQaF03CIBZIKqVl5iXmxBeXJJakws1X0jDQMzcwNzQwM7cwNLQwMzUxN9U2yNJUgtqLU74W1cB4nN6zRAVw36JL1NbGAgB4XNujJgEAAA==", "encoding": "utf-8", "compression": "gzip"}',
        job_type=JobType.CIRCUIT,
    )

    assert isinstance(job_result, JobResult)
    assert job_result.job_id == 1
    assert (
        job_result.http_response
        == '{"data": "H4sIABrWEWcC/4uuViooyk9KTMrMySzJTC1WslKoVjIAkgZ6JjoKSoZgllktkJmcX5pXgpCHyYLlihNzC3LAmqOjDWJ1FKIN4QQaF03CIBZIKqVl5iXmxBeXJJakws1X0jDQMzcwNzQwM7cwNLQwMzUxN9U2yNJUgtqLU74W1cB4nN6zRAVw36JL1NbGAgB4XNujJgEAAA==", "encoding": "utf-8", "compression": "gzip"}'
    )
    assert isinstance(job_result.data, list)
    for item in job_result.data:
        assert isinstance(item, dict)


def test_job_result_qprogram_works():
    """Test QProgrom results are returned as dicts"""

    job_result = JobResult(
        job_id=0,
        http_response='{"data": "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", "encoding": "utf-8", "compression": "gzip"}',
        job_type="qprogram",
    )
    assert isinstance(job_result.data, str)


def test_job_result_qprogram_works_legacy():
    """Test QProgrom results are returned as dicts"""

    job_result = JobResult(
        job_id=0,
        http_response="eyJ0eXBlIjogIlFQcm9ncmFtIiwgImF0dHJpYnV0ZXMiOiB7Il9ib2R5IjogeyJ0eXBlIjogIkJsb2NrIiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICI2YmNlYjQ1MS0wZWUxLTQ1N2MtYTE1Ny1iMmYyZDUzOGZmYjUifSwgImVsZW1lbnRzIjogeyJ0eXBlIjogImxpc3QiLCAiZWxlbWVudHMiOiBbeyJ0eXBlIjogIkF2ZXJhZ2UiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjIwM2MzY2U2LTVjNzktNGQwZS1iMzYzLTgyZDQ4NDgwYWI5OCJ9LCAiZWxlbWVudHMiOiB7InR5cGUiOiAibGlzdCIsICJlbGVtZW50cyI6IFt7InR5cGUiOiAiRm9yTG9vcCIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiYzhkNjYzMzgtYzU0OS00MjcwLWI0NjAtNjA4NmE0OTE0ODMzIn0sICJlbGVtZW50cyI6IHsidHlwZSI6ICJsaXN0IiwgImVsZW1lbnRzIjogW3sidHlwZSI6ICJTZXRHYWluIiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICJmZGFkMjAwOC1iODViLTRiYjYtYjIwYi1jZjQ2NmQxZGFlNTgifSwgImJ1cyI6ICJkcml2ZV9xMF9idXMiLCAiZ2FpbiI6IHsidHlwZSI6ICJGbG9hdFZhcmlhYmxlIiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICI2MzVkZjdjYS1jZTM4LTRkNjItOWZlZC03ZjFjYmFmNzFlNzkifSwgIl9zb3VyY2UiOiB7InR5cGUiOiAiVmFsdWVTb3VyY2UiLCAiYXR0cmlidXRlcyI6IHsidmFsdWUiOiAiRnJlZSJ9fSwgIl92YWx1ZSI6IG51bGwsICJfZG9tYWluIjogeyJ0eXBlIjogIkRvbWFpbiIsICJhdHRyaWJ1dGVzIjogeyJ2YWx1ZSI6ICJWb2x0YWdlIn19fX19fSwgeyJ0eXBlIjogIlBsYXkiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogImFiY2FjZDExLWU0YWEtNDI5Yi1iNjNjLTNhMjUwOWJjYTE3ZiJ9LCAiYnVzIjogImRyaXZlX3EwX2J1cyIsICJ3YXZlZm9ybSI6IHsidHlwZSI6ICJJUVBhaXIiLCAiYXR0cmlidXRlcyI6IHsiSSI6IHsidHlwZSI6ICJHYXVzc2lhbiIsICJhdHRyaWJ1dGVzIjogeyJhbXBsaXR1ZGUiOiAxLjAsICJkdXJhdGlvbiI6IDQwLCAibnVtX3NpZ21hcyI6IDQuNX19LCAiUSI6IHsidHlwZSI6ICJEcmFnQ29ycmVjdGlvbiIsICJhdHRyaWJ1dGVzIjogeyJkcmFnX2NvZWZmaWNpZW50IjogLTIuMCwgIndhdmVmb3JtIjogeyJ0eXBlIjogIkdhdXNzaWFuIiwgImF0dHJpYnV0ZXMiOiB7ImFtcGxpdHVkZSI6IDEuMCwgImR1cmF0aW9uIjogNDAsICJudW1fc2lnbWFzIjogNC41fX19fX19LCAid2FpdF90aW1lIjogbnVsbH19LCB7InR5cGUiOiAiU3luYyIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiOWRhZDJhYzYtYzk1OC00Y2Q5LTg1MzItMmMyMzJhNTJkMzg3In0sICJidXNlcyI6IG51bGx9fSwgeyJ0eXBlIjogIlBsYXkiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjRlMmEzYTc1LWJkYzEtNDEzZi04ZDg1LTY3MDM5NThkMzg3NSJ9LCAiYnVzIjogInJlYWRvdXRfcTBfYnVzIiwgIndhdmVmb3JtIjogeyJ0eXBlIjogIklRUGFpciIsICJhdHRyaWJ1dGVzIjogeyJJIjogeyJ0eXBlIjogIlNxdWFyZSIsICJhdHRyaWJ1dGVzIjogeyJhbXBsaXR1ZGUiOiAxLjAsICJkdXJhdGlvbiI6IDIwMDB9fSwgIlEiOiB7InR5cGUiOiAiU3F1YXJlIiwgImF0dHJpYnV0ZXMiOiB7ImFtcGxpdHVkZSI6IDAuMCwgImR1cmF0aW9uIjogMjAwMH19fX0sICJ3YWl0X3RpbWUiOiA0MH19LCB7InR5cGUiOiAiQWNxdWlyZSIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiM2Y2YmNhYjctOTJlOS00M2I4LTg5YjAtOTNiNDcxMDNjNDlhIn0sICJidXMiOiAicmVhZG91dF9xMF9idXMiLCAid2VpZ2h0cyI6IHsidHlwZSI6ICJJUVBhaXIiLCAiYXR0cmlidXRlcyI6IHsiSSI6IHsidHlwZSI6ICJTcXVhcmUiLCAiYXR0cmlidXRlcyI6IHsiYW1wbGl0dWRlIjogMS4wLCAiZHVyYXRpb24iOiAyMDAwfX0sICJRIjogeyJ0eXBlIjogIlNxdWFyZSIsICJhdHRyaWJ1dGVzIjogeyJhbXBsaXR1ZGUiOiAxLjAsICJkdXJhdGlvbiI6IDIwMDB9fX19LCAibmFtZSI6IG51bGx9fSwgeyJ0eXBlIjogIldhaXQiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjMzNTQzMDdlLWU0OTUtNDNhMy1hODI1LTE5ZGEzZTcxMTA0ZSJ9LCAiYnVzIjogInJlYWRvdXRfcTBfYnVzIiwgImR1cmF0aW9uIjogMTAwMDB9fV19LCAidmFyaWFibGUiOiB7InR5cGUiOiAiRmxvYXRWYXJpYWJsZSIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiNjM1ZGY3Y2EtY2UzOC00ZDYyLTlmZWQtN2YxY2JhZjcxZTc5In0sICJfc291cmNlIjogeyJ0eXBlIjogIlZhbHVlU291cmNlIiwgImF0dHJpYnV0ZXMiOiB7InZhbHVlIjogIkZyZWUifX0sICJfdmFsdWUiOiBudWxsLCAiX2RvbWFpbiI6IHsidHlwZSI6ICJEb21haW4iLCAiYXR0cmlidXRlcyI6IHsidmFsdWUiOiAiVm9sdGFnZSJ9fX19LCAic3RhcnQiOiAwLjAsICJzdG9wIjogMS4wLCAic3RlcCI6IDAuMX19XX0sICJzaG90cyI6IDEwMDB9fV19fX0sICJfYnVzZXMiOiB7InR5cGUiOiAic2V0IiwgImVsZW1lbnRzIjogWyJyZWFkb3V0X3EwX2J1cyIsICJkcml2ZV9xMF9idXMiXX0sICJfdmFyaWFibGVzIjogeyJ0eXBlIjogImxpc3QiLCAiZWxlbWVudHMiOiBbeyJ0eXBlIjogIkZsb2F0VmFyaWFibGUiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjYzNWRmN2NhLWNlMzgtNGQ2Mi05ZmVkLTdmMWNiYWY3MWU3OSJ9LCAiX3NvdXJjZSI6IHsidHlwZSI6ICJWYWx1ZVNvdXJjZSIsICJhdHRyaWJ1dGVzIjogeyJ2YWx1ZSI6ICJGcmVlIn19LCAiX3ZhbHVlIjogbnVsbCwgIl9kb21haW4iOiB7InR5cGUiOiAiRG9tYWluIiwgImF0dHJpYnV0ZXMiOiB7InZhbHVlIjogIlZvbHRhZ2UifX19fV19LCAiX2Jsb2NrX3N0YWNrIjogeyJ0eXBlIjogImRlcXVlIiwgImVsZW1lbnRzIjogW3sidHlwZSI6ICJCbG9jayIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiNmJjZWI0NTEtMGVlMS00NTdjLWExNTctYjJmMmQ1MzhmZmI1In0sICJlbGVtZW50cyI6IHsidHlwZSI6ICJsaXN0IiwgImVsZW1lbnRzIjogW3sidHlwZSI6ICJBdmVyYWdlIiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICIyMDNjM2NlNi01Yzc5LTRkMGUtYjM2My04MmQ0ODQ4MGFiOTgifSwgImVsZW1lbnRzIjogeyJ0eXBlIjogImxpc3QiLCAiZWxlbWVudHMiOiBbeyJ0eXBlIjogIkZvckxvb3AiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogImM4ZDY2MzM4LWM1NDktNDI3MC1iNDYwLTYwODZhNDkxNDgzMyJ9LCAiZWxlbWVudHMiOiB7InR5cGUiOiAibGlzdCIsICJlbGVtZW50cyI6IFt7InR5cGUiOiAiU2V0R2FpbiIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiZmRhZDIwMDgtYjg1Yi00YmI2LWIyMGItY2Y0NjZkMWRhZTU4In0sICJidXMiOiAiZHJpdmVfcTBfYnVzIiwgImdhaW4iOiB7InR5cGUiOiAiRmxvYXRWYXJpYWJsZSIsICJhdHRyaWJ1dGVzIjogeyJfdXVpZCI6IHsidHlwZSI6ICJVVUlEIiwgInV1aWQiOiAiNjM1ZGY3Y2EtY2UzOC00ZDYyLTlmZWQtN2YxY2JhZjcxZTc5In0sICJfc291cmNlIjogeyJ0eXBlIjogIlZhbHVlU291cmNlIiwgImF0dHJpYnV0ZXMiOiB7InZhbHVlIjogIkZyZWUifX0sICJfdmFsdWUiOiBudWxsLCAiX2RvbWFpbiI6IHsidHlwZSI6ICJEb21haW4iLCAiYXR0cmlidXRlcyI6IHsidmFsdWUiOiAiVm9sdGFnZSJ9fX19fX0sIHsidHlwZSI6ICJQbGF5IiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICJhYmNhY2QxMS1lNGFhLTQyOWItYjYzYy0zYTI1MDliY2ExN2YifSwgImJ1cyI6ICJkcml2ZV9xMF9idXMiLCAid2F2ZWZvcm0iOiB7InR5cGUiOiAiSVFQYWlyIiwgImF0dHJpYnV0ZXMiOiB7IkkiOiB7InR5cGUiOiAiR2F1c3NpYW4iLCAiYXR0cmlidXRlcyI6IHsiYW1wbGl0dWRlIjogMS4wLCAiZHVyYXRpb24iOiA0MCwgIm51bV9zaWdtYXMiOiA0LjV9fSwgIlEiOiB7InR5cGUiOiAiRHJhZ0NvcnJlY3Rpb24iLCAiYXR0cmlidXRlcyI6IHsiZHJhZ19jb2VmZmljaWVudCI6IC0yLjAsICJ3YXZlZm9ybSI6IHsidHlwZSI6ICJHYXVzc2lhbiIsICJhdHRyaWJ1dGVzIjogeyJhbXBsaXR1ZGUiOiAxLjAsICJkdXJhdGlvbiI6IDQwLCAibnVtX3NpZ21hcyI6IDQuNX19fX19fSwgIndhaXRfdGltZSI6IG51bGx9fSwgeyJ0eXBlIjogIlN5bmMiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjlkYWQyYWM2LWM5NTgtNGNkOS04NTMyLTJjMjMyYTUyZDM4NyJ9LCAiYnVzZXMiOiBudWxsfX0sIHsidHlwZSI6ICJQbGF5IiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICI0ZTJhM2E3NS1iZGMxLTQxM2YtOGQ4NS02NzAzOTU4ZDM4NzUifSwgImJ1cyI6ICJyZWFkb3V0X3EwX2J1cyIsICJ3YXZlZm9ybSI6IHsidHlwZSI6ICJJUVBhaXIiLCAiYXR0cmlidXRlcyI6IHsiSSI6IHsidHlwZSI6ICJTcXVhcmUiLCAiYXR0cmlidXRlcyI6IHsiYW1wbGl0dWRlIjogMS4wLCAiZHVyYXRpb24iOiAyMDAwfX0sICJRIjogeyJ0eXBlIjogIlNxdWFyZSIsICJhdHRyaWJ1dGVzIjogeyJhbXBsaXR1ZGUiOiAwLjAsICJkdXJhdGlvbiI6IDIwMDB9fX19LCAid2FpdF90aW1lIjogNDB9fSwgeyJ0eXBlIjogIkFjcXVpcmUiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjNmNmJjYWI3LTkyZTktNDNiOC04OWIwLTkzYjQ3MTAzYzQ5YSJ9LCAiYnVzIjogInJlYWRvdXRfcTBfYnVzIiwgIndlaWdodHMiOiB7InR5cGUiOiAiSVFQYWlyIiwgImF0dHJpYnV0ZXMiOiB7IkkiOiB7InR5cGUiOiAiU3F1YXJlIiwgImF0dHJpYnV0ZXMiOiB7ImFtcGxpdHVkZSI6IDEuMCwgImR1cmF0aW9uIjogMjAwMH19LCAiUSI6IHsidHlwZSI6ICJTcXVhcmUiLCAiYXR0cmlidXRlcyI6IHsiYW1wbGl0dWRlIjogMS4wLCAiZHVyYXRpb24iOiAyMDAwfX19fSwgIm5hbWUiOiBudWxsfX0sIHsidHlwZSI6ICJXYWl0IiwgImF0dHJpYnV0ZXMiOiB7Il91dWlkIjogeyJ0eXBlIjogIlVVSUQiLCAidXVpZCI6ICIzMzU0MzA3ZS1lNDk1LTQzYTMtYTgyNS0xOWRhM2U3MTEwNGUifSwgImJ1cyI6ICJyZWFkb3V0X3EwX2J1cyIsICJkdXJhdGlvbiI6IDEwMDAwfX1dfSwgInZhcmlhYmxlIjogeyJ0eXBlIjogIkZsb2F0VmFyaWFibGUiLCAiYXR0cmlidXRlcyI6IHsiX3V1aWQiOiB7InR5cGUiOiAiVVVJRCIsICJ1dWlkIjogIjYzNWRmN2NhLWNlMzgtNGQ2Mi05ZmVkLTdmMWNiYWY3MWU3OSJ9LCAiX3NvdXJjZSI6IHsidHlwZSI6ICJWYWx1ZVNvdXJjZSIsICJhdHRyaWJ1dGVzIjogeyJ2YWx1ZSI6ICJGcmVlIn19LCAiX3ZhbHVlIjogbnVsbCwgIl9kb21haW4iOiB7InR5cGUiOiAiRG9tYWluIiwgImF0dHJpYnV0ZXMiOiB7InZhbHVlIjogIlZvbHRhZ2UifX19fSwgInN0YXJ0IjogMC4wLCAic3RvcCI6IDEuMCwgInN0ZXAiOiAwLjF9fV19LCAic2hvdHMiOiAxMDAwfX1dfX19XX19fQ==",
        job_type="qprogram",
    )
    assert isinstance(job_result.data, dict)


def test_job_result_vqa_works():
    """Test vqa results are returned as dicts"""

    job_result = JobResult(
        job_id=0,
        http_response="eyJ2cWFfZGljdCI6IHsiX25hbWUiOiAiVlFBIiwgImFuc2F0eiI6IHsiX25hbWUiOiAiSGFyZHdhcmVFZmZpY2llbnRBbnNhdHoiLCAiX2NpcmN1aXQiOiB7Il90eXBlIjogIlF1YW50dW1DaXJjdWl0IiwgIl9nYXRlcyI6IFtdLCAiX2luaXRfc3RhdGUiOiBudWxsLCAibl9xdWJpdHMiOiA0fSwgIm5fcXViaXRzIjogNCwgImxheWVycyI6IDEsICJjb25uZWN0aXZpdHkiOiBbWzAsIDFdLCBbMSwgMl0sIFsyLCAzXV0sICJzdHJ1Y3R1cmUiOiAiZ3JvdXBlZCIsICJvbmVfZ2F0ZSI6ICJVMiIsICJ0d29fZ2F0ZSI6ICJDTk9UIn0sICJiYWNrZW5kIjogeyJfdHlwZSI6ICJRaWJvIiwgIl9jaXJjdWl0IjogbnVsbCwgImJhY2tlbmQiOiAibnVtcHkiLCAicGxhdGZvcm0iOiBudWxsfSwgImNvc3RfZnVuY3Rpb24iOiB7Il9uYW1lIjogIlRTUF9Db3N0RnVuY3Rpb24iLCAiaW5zdGFuY2UiOiB7Il9uYW1lIjogIlRTUF9JbnN0YW5jZSIsICJuX25vZGVzIjogMiwgInN0YXJ0IjogbnVsbCwgImxvb3AiOiB0cnVlLCAiX2Rpc3RhbmNlcyI6IFtbMC4wLCAwLjk2MzU3ODM4OTk0MjE5NzFdLCBbMC4zMTYzMTgyNzgxOTEzMjAzLCAwLjBdXX0sICJwYXJhbWV0ZXJzIjogW10sICJlbmNvZGluZyI6ICJvbmVfaG90IiwgImxhZ3JhbmdlX211bHRpcGxpZXIiOiAxMH0sICJpbnN0YW5jZSI6IHsiX25hbWUiOiAiVFNQX0luc3RhbmNlIiwgIm5fbm9kZXMiOiAyLCAic3RhcnQiOiBudWxsLCAibG9vcCI6IHRydWUsICJfZGlzdGFuY2VzIjogW1swLjAsIDAuOTYzNTc4Mzg5OTQyMTk3MV0sIFswLjMxNjMxODI3ODE5MTMyMDMsIDAuMF1dfSwgIm9wdGltaXplciI6IHsiX25hbWUiOiAiR3JhZGllbnREZXNjZW50In0sICJzYW1wbGVyIjogeyJfbmFtZSI6ICJTYW1wbGVyIiwgIl9jaXJjdWl0IjogbnVsbCwgIl9wYXJhbWV0ZXJzIjogW10sICJfcXVhbnR1bV9zdGF0ZSI6IG51bGwsICJfcHJvYmFiaWxpdHlfZGljdCI6IG51bGwsICJfcmVxdWlyZWRfcXViaXRzIjogbnVsbH0sICJuX3Nob3RzIjogMTAwMH0sICJpbml0X3BhcmFtcyI6IFswLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwLCAwXSwgIm9wdGltaXplcl9wYXJhbXMiOiB7Im1ldGhvZCI6ICJQb3dlbGwifX0=",
        job_type="vqa",
    )
    assert isinstance(job_result.data, dict)


def test_job_result_annealing_program_works():
    """Test vqa results are returned as dicts"""

    job_result = JobResult(
        job_id=0,
        http_response='{"data": "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", "encoding": "utf-8", "compression": "gzip"}',
        job_type="annealing_program",
    )
    assert isinstance(job_result.data, str)


def test_job_result_program_raises_error():
    """Test we are rising exceptions to inform correctly that PROGRAMS are not currently supported."""

    job_result = JobResult(job_id=0, http_response="WzAuMSwgMC4xLCAwLjEsIDAuMSwgMC4xXQ==", job_type="program")
    assert isinstance(job_result.data, str)
